{
  "swagger": "2.0",
  "info": {
    "title": "LibMaS API documentation",
    "description": "Final group project for BYU-I CSE341. Authors and contributions: [Deana Briggs](https://github.com/deanabriggs) (loans, authors, testing), [Carlos Cervantes](https://github.com/CarlosYaelCervantesRojas)(users, authentication, testing), [Wilson Romero](https://github.com/wilsonBYU) (books, bookItems, authorization, database)",
    "version": "0.1a"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/books/": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Return all books from the database",
        "responses": {
          "200": {
            "description": "Books retrieved successfully"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "description": "Inserts a new book to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Json containing book data",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Harry Potter and the Goblet of Fire"
                },
                "authorId": {
                  "type": "string",
                  "example": "4"
                },
                "isbn": {
                  "type": "string",
                  "example": "9780439139601"
                },
                "edition": {
                  "type": "string",
                  "example": "Paperback"
                },
                "pubDate": {
                  "type": "string",
                  "example": "2000-07-08"
                },
                "genre": {
                  "type": "string",
                  "example": "Fantasy"
                },
                "cover": {
                  "type": "string",
                  "example": "https://m.media-amazon.com/images/I/91-LL7OnDCL._AC_UF1000,1000_QL80_.jpg"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New book created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    },
    "/books/{book_id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Returns a single book with the given ID",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Book with the given id retrieval successfully"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "description": "Updates an existing book",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Json containing book data",
            "schema": {
              "type": "object",
              "properties": {
                "edition": {
                  "type": "string",
                  "example": "Paperback"
                },
                "genre": {
                  "type": "string",
                  "example": "Fantasy"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book updated successfully"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "description": "Deletes a single book with the given ID",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Book with the given id deleted successfully"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    },
    "/books/{book_id}/items": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Returns the book informatoin and all the copies available",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Data with the given id retrieved successfully"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    },
    "/books/{book_id}/details": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Returns the book including the author information",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Book information retrieved successfully"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    },
    "/bookItems/": {
      "get": {
        "tags": [
          "Book Items"
        ],
        "description": "Return all book items from the database",
        "responses": {
          "200": {
            "description": "Book items retrieved successfully"
          },
          "404": {
            "description": "No book items found"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      },
      "post": {
        "tags": [
          "Book Items"
        ],
        "description": "Inserts a new book item to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Json containing book detail data",
            "schema": {
              "type": "object",
              "properties": {
                "barCode": {
                  "type": "string",
                  "example": "9780439139601-010"
                },
                "bookId": {
                  "type": "string",
                  "example": "674e9051d8a0e1389c0390e7"
                },
                "available": {
                  "type": "boolean",
                  "example": true
                },
                "discarded": {
                  "type": "boolean",
                  "example": false
                },
                "discardedDate": {},
                "discardedReason": {}
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New book item created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    },
    "/bookItems/{bookItemId}": {
      "get": {
        "tags": [
          "Book Items"
        ],
        "description": "Returns a single book item with the given ID",
        "parameters": [
          {
            "name": "bookItemId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Book item with the given id retrieval successfully"
          },
          "404": {
            "description": "No book items found with the given ID"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      },
      "put": {
        "tags": [
          "Book Items"
        ],
        "description": "Updates an existing book item",
        "parameters": [
          {
            "name": "bookItemId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Json containing book data",
            "schema": {
              "type": "object",
              "properties": {
                "available": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book item updated successfully"
          },
          "204": {
            "description": "No Content"
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      },
      "delete": {
        "tags": [
          "Book Items"
        ],
        "description": "Deletes a single book item with the given ID",
        "parameters": [
          {
            "name": "bookItemId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Book item with the given id deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    },
    "/bookItems/{bookItemId}/details": {
      "get": {
        "tags": [
          "Book Items"
        ],
        "description": "Returns a single book and details including book and author information",
        "parameters": [
          {
            "name": "bookItemId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Book item with the given id retrieval successfully"
          },
          "404": {
            "description": "No book items found with the given ID"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    },
    "/authors/": {
      "get": {
        "tags": [
          "Authors"
        ],
        "description": "Returns all authors from the database",
        "responses": {
          "200": {
            "description": "Authors retrieved successfully"
          },
          "500": {
            "description": "Internal server error (database or Node.js)"
          }
        }
      },
      "post": {
        "tags": [
          "Authors"
        ],
        "description": "Adds a new author to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON containing author data",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Brandon"
                },
                "lastName": {
                  "type": "string",
                  "example": "Sanderson"
                },
                "dob": {
                  "type": "string",
                  "example": "1975-12-19"
                },
                "country": {
                  "type": "string",
                  "example": "US"
                },
                "language": {
                  "type": "string",
                  "example": "English"
                },
                "wiki": {
                  "type": "string",
                  "example": "https://en.wikipedia.org/wiki/Brandon_Sanderson"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New author created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (database or Node.js)"
          }
        }
      }
    },
    "/authors/{author_id}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "description": "Returns a single author with the given ID",
        "parameters": [
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Author with the given id retrieval successfully"
          },
          "500": {
            "description": "Internal server error (database or Node.js)"
          }
        }
      },
      "put": {
        "tags": [
          "Authors"
        ],
        "description": "Update an existing author. Fields not provided will not be changed.",
        "parameters": [
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "JSON containing author data",
            "schema": {
              "type": "object",
              "properties": {
                "dod": {
                  "type": "string",
                  "example": "2025-01-01"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Authors"
        ],
        "description": "Deletes an author with the given ID",
        "parameters": [
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/loans/": {
      "get": {
        "tags": [
          "Loans"
        ],
        "description": "Returns all loans from the database",
        "responses": {
          "200": {
            "description": "Loans retrieved successfully"
          },
          "500": {
            "description": "Internal server error (database or Node.js)"
          }
        }
      },
      "post": {
        "tags": [
          "Loans"
        ],
        "description": "Adds a new loan to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON containing loan data",
            "schema": {
              "type": "object",
              "properties": {
                "bookItemId": {
                  "type": "string",
                  "example": "123456"
                },
                "userId": {
                  "type": "string",
                  "example": "654321"
                },
                "checkOutDate": {
                  "type": "string",
                  "example": "2024-12-01"
                },
                "dueDate": {
                  "type": "string",
                  "example": "2024-12-22"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New loan created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (database or Node.js)"
          }
        }
      }
    },
    "/loans/{loan_id}": {
      "get": {
        "tags": [
          "Loans"
        ],
        "description": "Returns loans with the given ID",
        "parameters": [
          {
            "name": "loan_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Loans with the given id retrieval successfully"
          },
          "500": {
            "description": "Internal server error (database or Node.js)"
          }
        }
      },
      "put": {
        "tags": [
          "Loans"
        ],
        "description": "Update an existing loan to reflect ",
        "parameters": [
          {
            "name": "loan_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "JSON containing loan data",
            "schema": {
              "type": "object",
              "properties": {
                "returnDate": {
                  "type": "string",
                  "example": "2024-12-20"
                },
                "feeAssessed": {
                  "type": "string",
                  "example": "2.50"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Loans"
        ],
        "description": "Deletes an loan with the given ID",
        "parameters": [
          {
            "name": "loan_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Returns all users from the database",
        "responses": {
          "200": {
            "description": "Users retrieved successfully"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Returns a single user with the given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User with the given id retrieval successfully"
          },
          "400": {
            "description": "Invalid user Id format"
          },
          "404": {
            "description": "User with the given id does not excist"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Updates an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Json containing user data",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "string"
                },
                "lastName": {
                  "type": "string",
                  "example": "string"
                },
                "displayName": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a single suer with the given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User with the given id deleted successfully"
          },
          "400": {
            "description": "Invalid user Id format"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User with the given id does not excist"
          },
          "500": {
            "description": "Internal server error (databse or node)"
          }
        }
      }
    }
  }
}